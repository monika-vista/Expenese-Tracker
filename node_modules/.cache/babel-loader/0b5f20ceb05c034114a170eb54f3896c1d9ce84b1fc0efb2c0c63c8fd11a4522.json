{"ast":null,"code":"var _jsxFileName = \"/Users/monika/Desktop/react/self_projects/01-starting-project/src/components/Expense/Expenses.js\",\n  _s = $RefreshSig$();\nimport ExpenseFilter from \"../ExpenseFilter/ExpenseFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport React, { useEffect, useState, useReducer } from \"react\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction taskreducer(allExpense, action) {\n  switch (action.type) {\n    case 'add':\n      {\n        return [...allExpense, action.exp];\n      }\n    case 'edit':\n      {\n        return allExpense.map(exp => {\n          if (exp.id === action.exp.id) {\n            console.log(action.exp.amount);\n            return action.exp;\n          } else {\n            return exp;\n          }\n        });\n      }\n    case 'delete':\n      {\n        return allExpense.filter(exp => exp.id !== action.id);\n      }\n    default:\n      {\n        throw Error(\"Unknown action: \" + action.type);\n      }\n  }\n}\nconst Expenses = props => {\n  _s();\n  const [filteredExpense, setFilteredExpense] = useState([]);\n  const [date, setSelectedDate] = useState();\n  const [allExpense, dispatch] = useReducer(taskreducer, props.expense);\n  const [lengthE, setLength] = useState(allExpense.length);\n  const getFilteredDate = selectedDate => {\n    setSelectedDate(selectedDate);\n    let arr = allExpense.filter(key => key.date.getFullYear().toString() === selectedDate);\n    if (selectedDate === \"all\") {\n      arr = allExpense;\n    }\n    setFilteredExpense(arr);\n  };\n\n  //useEffect to run only at the start of the application\n  // useEffect(()=>{\n  //   console.log(`hey`)\n  //   getFilteredDate('all');\n  // },[])\n\n  //useEffect to re-render the component immediately as new expense is added.\n\n  useEffect(() => {\n    getFilteredDate(date);\n  }, [allExpense]);\n  const handleChange = expense => {\n    dispatch({\n      type: 'edit',\n      exp: expense\n    });\n  };\n  if (lengthE !== props.expense.length) {\n    console.log(`${lengthE} ${props.expense.length} ${allExpense.length}`);\n    dispatch({\n      type: 'add',\n      exp: props.newData\n    });\n    setLength(props.expense.length);\n  }\n  const handleDelete = id => {\n    console.log(`${allExpense} now ${id}`);\n    dispatch({\n      type: 'delete',\n      id: id\n    });\n    props.modifiedData(id);\n  };\n\n  // console.log(`this is the last array I directly received after updating `)\n  let filterData;\n  if (date) {\n    filterData = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ExpensesChart, {\n        expense: filteredExpense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        arr: filteredExpense,\n        onchange: handleChange,\n        ondelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    filterData = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ExpensesChart, {\n        expense: allExpense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        arr: allExpense,\n        onchange: handleChange,\n        ondelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      getFilteredDate: getFilteredDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), filterData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"4V3ycnMhGFFgk5pL/2mMohuviV8=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseFilter","ExpenseItem","React","useEffect","useState","useReducer","ExpensesChart","jsxDEV","_jsxDEV","Fragment","_Fragment","taskreducer","allExpense","action","type","exp","map","id","console","log","amount","filter","Error","Expenses","props","_s","filteredExpense","setFilteredExpense","date","setSelectedDate","dispatch","expense","lengthE","setLength","length","getFilteredDate","selectedDate","arr","key","getFullYear","toString","handleChange","newData","handleDelete","modifiedData","filterData","children","fileName","_jsxFileName","lineNumber","columnNumber","onchange","ondelete","_c","$RefreshReg$"],"sources":["/Users/monika/Desktop/react/self_projects/01-starting-project/src/components/Expense/Expenses.js"],"sourcesContent":["import ExpenseFilter from \"../ExpenseFilter/ExpenseFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport React, { useEffect, useState, useReducer } from \"react\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction taskreducer(allExpense, action) {\n  switch (action.type) {\n    case 'add': {\n      return ([...allExpense, action.exp])\n    }\n    case 'edit': {\n      return allExpense.map((exp) => {\n        if (exp.id === action.exp.id) {\n          console.log(action.exp.amount)\n          return action.exp;\n        } else {\n          return exp;\n        }\n      });\n    }\n    case 'delete': {\n      return allExpense.filter((exp) => exp.id !== action.id);\n    }\n    default: {\n      throw Error(\"Unknown action: \" + action.type);\n    }\n  }\n}\n\nconst Expenses = (props) => {\n  const [filteredExpense, setFilteredExpense] = useState([]);\n  const [date, setSelectedDate] = useState();\n  const [allExpense, dispatch] = useReducer(taskreducer, props.expense);\n  const [lengthE, setLength] = useState(allExpense.length);\n\n  const getFilteredDate = (selectedDate) => {\n    setSelectedDate(selectedDate);\n    let arr = allExpense.filter(\n      (key) => key.date.getFullYear().toString() === selectedDate\n    );\n    if (selectedDate === \"all\") {\n      arr = allExpense;\n    }\n    setFilteredExpense(arr);\n  };\n\n  //useEffect to run only at the start of the application\n  // useEffect(()=>{\n  //   console.log(`hey`)\n  //   getFilteredDate('all');\n  // },[])\n\n  //useEffect to re-render the component immediately as new expense is added.\n\n  useEffect(() => {\n    getFilteredDate(date);\n  }, [allExpense]);\n\n  const handleChange = (expense) => {\n    dispatch({\n      type: 'edit',\n      exp: expense\n    })\n  }\n\n  if (lengthE !== props.expense.length) {\n    console.log(`${lengthE} ${props.expense.length} ${allExpense.length}`)\n    dispatch({\n      type: 'add',\n      exp: props.newData\n    })\n    setLength(props.expense.length);\n  }\n\n  const handleDelete = (id) => {\n    console.log(`${allExpense} now ${id}`)\n    dispatch({\n      type: 'delete',\n      id: id\n    })\n    props.modifiedData(id);\n  }\n\n  // console.log(`this is the last array I directly received after updating `)\n  let filterData;\n  if (date) {\n    filterData = (\n      <>\n        <ExpensesChart expense={filteredExpense} />\n        <ExpenseItem arr={filteredExpense} onchange={handleChange} ondelete={handleDelete} />\n      </>\n    )\n  } else {\n    filterData = (\n      <>\n        <ExpensesChart expense={allExpense} />\n        <ExpenseItem arr={allExpense} onchange={handleChange} ondelete={handleDelete} />\n      </>\n    )\n  }\n\n  return (\n    <div>\n      <ExpenseFilter getFilteredDate={getFilteredDate} />\n      {filterData}</div>\n  );\n};\nexport default Expenses;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
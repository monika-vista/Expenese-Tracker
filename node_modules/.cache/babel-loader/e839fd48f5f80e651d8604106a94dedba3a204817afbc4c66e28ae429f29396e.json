{"ast":null,"code":"var _jsxFileName = \"/Users/monika/Desktop/react/self_projects/01-starting-project/src/components/Expense/ExpenseItem.tsx\";\nimport ExpenseDestructure from \"./ExpenseDestructure\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseItem = props => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: props.arr.map(exp => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(ExpenseDestructure, {\n          expense: exp,\n          onchange: props.onchange,\n          ondelete: props.ondelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpenseItem;\nexport default ExpenseItem;\n\n//alternatives to set props\n// you can directly destructure props in the arguments itself, ({date,title,amount})\n// then directly access inside your component with above variable names.\n\n//children is the reserved keyword and all the props has children attribute in-built even though if you don't mention it.\n// props.children constain the contain between the wrapper of the custom component\n//<example- Card-customComponent\n//<card><div><h2><EXPSENSE>.....</card>\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["ExpenseDestructure","Card","jsxDEV","_jsxDEV","ExpenseItem","props","children","arr","map","exp","expense","onchange","ondelete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/monika/Desktop/react/self_projects/01-starting-project/src/components/Expense/ExpenseItem.tsx"],"sourcesContent":["import ExpenseDestructure from \"./ExpenseDestructure\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card/Card\";\n\nconst ExpenseItem: React.FC = (props) => {\n  return (\n    <Card>\n      {props.arr.map((exp) => {\n        return (\n          <Card>\n            <ExpenseDestructure\n              expense={exp}\n              onchange={props.onchange}\n              ondelete={props.ondelete}\n            />\n          </Card>\n        );\n      })}\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n\n//alternatives to set props\n// you can directly destructure props in the arguments itself, ({date,title,amount})\n// then directly access inside your component with above variable names.\n\n//children is the reserved keyword and all the props has children attribute in-built even though if you don't mention it.\n// props.children constain the contain between the wrapper of the custom component\n//<example- Card-customComponent\n//<card><div><h2><EXPSENSE>.....</card>\n"],"mappings":";AAAA,OAAOA,kBAAkB,MAAM,sBAAsB;AACrD,OAAO,mBAAmB;AAC1B,OAAOC,IAAI,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAqB,GAAIC,KAAK,IAAK;EACvC,oBACEF,OAAA,CAACF,IAAI;IAAAK,QAAA,EACFD,KAAK,CAACE,GAAG,CAACC,GAAG,CAAEC,GAAG,IAAK;MACtB,oBACEN,OAAA,CAACF,IAAI;QAAAK,QAAA,eACHH,OAAA,CAACH,kBAAkB;UACjBU,OAAO,EAAED,GAAI;UACbE,QAAQ,EAAEN,KAAK,CAACM,QAAS;UACzBC,QAAQ,EAAEP,KAAK,CAACO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAEX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACC,EAAA,GAhBIb,WAAqB;AAkB3B,eAAeA,WAAW;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}